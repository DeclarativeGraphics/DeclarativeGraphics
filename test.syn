01testatom

02test line

03test
  sub

04test
  sub
    subsub

05test
  sub1
  sub2

06test line
  sub1
  sub2

07test line
  sub1 after1
    subsub1
      sss
  sub2 after2
    subsub2
      sss

()

(08 abc)

(09 a b c)

(10
 a
 b
 c)

(11 a b c) d

(12 a b c)
  def

(13 a b c)
  (d e f)

(14 a b c) ghi
  (d e f) jkl

15abc (d
 e f)

16abc (d
 e f) ghi

17abc (d
 e f)
 ijk

18abc (d
 e f)
   ghi

19abc (d
 e
   f)
 (g h
   i)

20abc
     def (g
h) sub?

21abc: x

22abc def: x

23abc def: ghi jkl

24abc def: ghi
           jkl

25abc def: ghi jkl
           mno pqr

26abc def:
  ghi

27abc def:
  ghi jkl

28abc def:
  ghi jkl
  mno pqr

29abc def: dsub1 dsub
           dsub2 dsub
  tsub1 tsub
  tsub2 tsub

30abc def: dsub1 dsub: dsubsub1 dsubsub
                       dsubsub2 dsubsub
              dtsub1 dtsub:
                  dtdsub dtdsub
                dttsub dttsub
           dsub2 dsub:
   dforcesubsub1 bla
   dforcesubsub2 bla
 tsub1 sub
 tsub2 sub

: 31abc

: 32abc def

: 33abc def
    sub subr
    sub subr

define
  -> a a
  id x
   x

define
  {a -> a}
  id x
    x

define:
  id x := x

define: id x:
  x

define: id x:= x

@doc# computes the factorial of {n}
@type {Int -> Int}
define:
  fac 0 := 1
  fac n := {n * (fac {n - 1})}

define: home user:=
  markdown#
    ## Welcome, \(user)!

    Welcome back.

define: main: do:
  putStr "Hello, what's your name?\n"
  name :<- getLine
  helloname := {"Hello, " ++ name ++ "!"}
  putStrLn helloname

fail
  a
  
